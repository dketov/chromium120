// Copyright 2020 LG Electronics, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

module ui.mojom;

import "mojo/public/mojom/base/unguessable_token.mojom";
import "sandbox/policy/mojom/sandbox.mojom";
import "ui/gfx/geometry/mojom/geometry.mojom";
import "ui/gfx/mojom/accelerated_widget.mojom";

struct VideoWindowInfo {
  mojo_base.mojom.UnguessableToken window_id;
  string native_window_id;
};

struct VideoWindowParams {
  bool use_overlay_processor_layout = true;
  bool use_video_mute_on_invisible = true;
  bool use_video_mute_on_app_minimized = true;
  bool use_coded_size_for_original_rect = false;
};

[ServiceSandbox=sandbox.mojom.Sandbox.kGpu]
interface VideoWindowConnector {
  CreateVideoWindow(gfx.mojom.AcceleratedWidget w, pending_remote<VideoWindowClient> client,
                    pending_receiver<VideoWindow> receiver, VideoWindowParams params);
};

[ServiceSandbox=sandbox.mojom.Sandbox.kGpu]
interface VideoWindow {
  SetVideoSize(gfx.mojom.Size coded_size, gfx.mojom.Size natural_size);
  SetProperty(string name, string value);
  UpdateVideoWindowGeometry(gfx.mojom.Rect src, gfx.mojom.Rect dst);
  UpdateVideoWindowGeometryWithCrop(gfx.mojom.Rect ori, gfx.mojom.Rect src, gfx.mojom.Rect dst);
};

interface VideoWindowClient {
  OnVideoWindowCreated(VideoWindowInfo window_info);
  OnVideoWindowDestroyed();
  OnVideoWindowGeometryChanged(gfx.mojom.Rect rect);
  OnVideoWindowVisibilityChanged(bool visibility);
};
