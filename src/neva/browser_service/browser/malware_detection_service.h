// Copyright 2022 LG Electronics, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

#ifndef NEVA_BROWSER_SERVICE_BROWSER_MALWARE_DETECTION_SERVICE_H_
#define NEVA_BROWSER_SERVICE_BROWSER_MALWARE_DETECTION_SERVICE_H_

#include "base/memory/ref_counted.h"
#include "url/gurl.h"

namespace content {
class BrowserContext;
}

namespace neva {

// Abstract Interface for Detecting Malicious URLs
class MalwareDetectionService
    : public base::RefCounted<MalwareDetectionService> {
 public:
  typedef base::OnceCallback<void(bool status)> CheckUrlCallback;

  static scoped_refptr<MalwareDetectionService> Create();

  virtual bool Initialize(content::BrowserContext* browser_context) = 0;
  virtual void CheckURL(const GURL& url, CheckUrlCallback callback) = 0;

 protected:
  friend class RefCounted<MalwareDetectionService>;

  MalwareDetectionService() = default;
  virtual ~MalwareDetectionService() = default;
};

}  // namespace neva

#endif  // NEVA_BROWSER_SERVICE_BROWSER_MALWARE_DETECTION_SERVICE_H_
